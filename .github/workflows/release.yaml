name: Release

on:
  push:
    branches:
      - ci
    tags:
      - "gosh_[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  # build_linux:
  #   name: Build ${{ matrix.target }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       target:
  #         - x86_64-unknown-linux-gnu

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         targets: ${{ matrix.target }}

  #     - run: |
  #         sudo apt update
  #         sudo apt install -y build-essential libboost-all-dev

  #     - run: |
  #         cargo build -r --target ${{ matrix.target }}
  #         ./target/${{ matrix.target }}/release/sold --version
  #         cd target/${{ matrix.target }}/release
  #         tar czvf sold-${{ matrix.target }}.tar.gz sold

  #     - name: Publish
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         prerelease: true
  #         files: |
  #           target/${{ matrix.target }}/release/sold-${{ matrix.target }}.tar.gz
  #         tag_name: ${{ github.ref_name }}-${{ github.run_number }}

  build_linux_arm:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            llvm \
            clang \
            cmake \
            g++-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            gcc-aarch64-linux-gnu

            # python3-pip

          # pip3 install ziglang
          # [[ -f ~/.cargo/bin/cargo-zigbuild ]] || cargo install cargo-zigbuild

          wget https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.bz2
          tar --bzip2 -xf boost_1_81_0.tar.bz2
          cd boost_1_81_0
          ./bootstrap.sh --with-toolset=clang
          # sudo ./b2 toolset=clang cxxflags="-stdlib=libc++" linkflags="-stdlib=libc++" --prefix=/usr/local install
          sudo ./b2 link=static install --prefix=/usr/local

          # aarch64-linux-gnu-gcc --version
          # aarch64-linux-gnu-g++ --version

          file $(which rustup)  # for debug
          rustup target add aarch64-unknown-linux-gnu
          rustup toolchain install --force-non-host stable-aarch64-unknown-linux-gnu
        env:
          CC: clang
          CXX: clang++

      - run: |
          export BOOST_ROOT=/usr/local
          export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
          export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
          cargo build -r --target ${{ matrix.target }}
          file ./target/${{ matrix.target }}/release/sold
          cd target/${{ matrix.target }}/release
          tar czvf sold-${{ matrix.target }}.tar.gz sold
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          # CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          # CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
          CC: clang
          CXX: clang++
          RUSTFLAGS: "-C linker=aarch64-linux-gnu-gcc"

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            target/${{ matrix.target }}/release/sold-${{ matrix.target }}.tar.gz
          tag_name: ${{ github.ref_name }}-${{ github.run_number }}

  # build_mac:
  #   name: Build ${{ matrix.target }}
  #   runs-on: ${{ matrix.image }}
  #   strategy:
  #     matrix:
  #       target:
  #         - x86_64-apple-darwin
  #         - aarch64-apple-darwin
  #       include:
  #         - target: x86_64-apple-darwin
  #           image: macos-13
  #         - target: aarch64-apple-darwin
  #           image: macos-14

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         targets: ${{ matrix.target }}

  #     - run: |
  #         brew install boost

  #     - run: |
  #         cargo build -r --target ${{ matrix.target }}
  #         ./target/${{ matrix.target }}/release/sold --version
  #         cd target/${{ matrix.target }}/release
  #         tar czvf sold-${{ matrix.target }}.tar.gz sold

  #     - name: Publish
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         prerelease: true
  #         files: |
  #           target/${{ matrix.target }}/release/sold-${{ matrix.target }}.tar.gz
  #         tag_name: ${{ github.ref_name }}-${{ github.run_number }}
